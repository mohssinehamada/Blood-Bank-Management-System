#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Blood_Bank_Management_System
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="bloodbank")]
	public partial class LINQDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertbloodtransfer(bloodtransfer instance);
    partial void Updatebloodtransfer(bloodtransfer instance);
    partial void Deletebloodtransfer(bloodtransfer instance);
    partial void Insertsignin(signin instance);
    partial void Updatesignin(signin instance);
    partial void Deletesignin(signin instance);
    partial void Insertpatient(patient instance);
    partial void Updatepatient(patient instance);
    partial void Deletepatient(patient instance);
    partial void InsertTransfer(Transfer instance);
    partial void UpdateTransfer(Transfer instance);
    partial void DeleteTransfer(Transfer instance);
    partial void InsertnewDonor(newDonor instance);
    partial void UpdatenewDonor(newDonor instance);
    partial void DeletenewDonor(newDonor instance);
    #endregion
		
		public LINQDataContext() : 
				base(global::Blood_Bank_Management_System.Properties.Settings.Default.bloodbankConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public LINQDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LINQDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LINQDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LINQDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<bloodtransfer> bloodtransfers
		{
			get
			{
				return this.GetTable<bloodtransfer>();
			}
		}
		
		public System.Data.Linq.Table<signin> signins
		{
			get
			{
				return this.GetTable<signin>();
			}
		}
		
		public System.Data.Linq.Table<patient> patients
		{
			get
			{
				return this.GetTable<patient>();
			}
		}
		
		public System.Data.Linq.Table<Transfer> Transfers
		{
			get
			{
				return this.GetTable<Transfer>();
			}
		}
		
		public System.Data.Linq.Table<newDonor> newDonors
		{
			get
			{
				return this.GetTable<newDonor>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.bloodtransfer")]
	public partial class bloodtransfer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Bgroup;
		
		private int _Bstock;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBgroupChanging(string value);
    partial void OnBgroupChanged();
    partial void OnBstockChanging(int value);
    partial void OnBstockChanged();
    #endregion
		
		public bloodtransfer()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bgroup", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Bgroup
		{
			get
			{
				return this._Bgroup;
			}
			set
			{
				if ((this._Bgroup != value))
				{
					this.OnBgroupChanging(value);
					this.SendPropertyChanging();
					this._Bgroup = value;
					this.SendPropertyChanged("Bgroup");
					this.OnBgroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bstock", DbType="Int NOT NULL")]
		public int Bstock
		{
			get
			{
				return this._Bstock;
			}
			set
			{
				if ((this._Bstock != value))
				{
					this.OnBstockChanging(value);
					this.SendPropertyChanging();
					this._Bstock = value;
					this.SendPropertyChanged("Bstock");
					this.OnBstockChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.signin")]
	public partial class signin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Username;
		
		private string _SPassword;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnSPasswordChanging(string value);
    partial void OnSPasswordChanged();
    #endregion
		
		public signin()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SPassword", DbType="VarChar(50)")]
		public string SPassword
		{
			get
			{
				return this._SPassword;
			}
			set
			{
				if ((this._SPassword != value))
				{
					this.OnSPasswordChanging(value);
					this.SendPropertyChanging();
					this._SPassword = value;
					this.SendPropertyChanged("SPassword");
					this.OnSPasswordChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.patient")]
	public partial class patient : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Pnum;
		
		private string _Pname;
		
		private int _PAge;
		
		private int _Pphone;
		
		private string _Pgender;
		
		private string _Pbgroupe;
		
		private string _Padress;
		
		private string _Pcity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPnumChanging(int value);
    partial void OnPnumChanged();
    partial void OnPnameChanging(string value);
    partial void OnPnameChanged();
    partial void OnPAgeChanging(int value);
    partial void OnPAgeChanged();
    partial void OnPphoneChanging(int value);
    partial void OnPphoneChanged();
    partial void OnPgenderChanging(string value);
    partial void OnPgenderChanged();
    partial void OnPbgroupeChanging(string value);
    partial void OnPbgroupeChanged();
    partial void OnPadressChanging(string value);
    partial void OnPadressChanged();
    partial void OnPcityChanging(string value);
    partial void OnPcityChanged();
    #endregion
		
		public patient()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pnum", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Pnum
		{
			get
			{
				return this._Pnum;
			}
			set
			{
				if ((this._Pnum != value))
				{
					this.OnPnumChanging(value);
					this.SendPropertyChanging();
					this._Pnum = value;
					this.SendPropertyChanged("Pnum");
					this.OnPnumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pname", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Pname
		{
			get
			{
				return this._Pname;
			}
			set
			{
				if ((this._Pname != value))
				{
					this.OnPnameChanging(value);
					this.SendPropertyChanging();
					this._Pname = value;
					this.SendPropertyChanged("Pname");
					this.OnPnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PAge", DbType="Int NOT NULL")]
		public int PAge
		{
			get
			{
				return this._PAge;
			}
			set
			{
				if ((this._PAge != value))
				{
					this.OnPAgeChanging(value);
					this.SendPropertyChanging();
					this._PAge = value;
					this.SendPropertyChanged("PAge");
					this.OnPAgeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pphone", DbType="Int NOT NULL")]
		public int Pphone
		{
			get
			{
				return this._Pphone;
			}
			set
			{
				if ((this._Pphone != value))
				{
					this.OnPphoneChanging(value);
					this.SendPropertyChanging();
					this._Pphone = value;
					this.SendPropertyChanged("Pphone");
					this.OnPphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pgender", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Pgender
		{
			get
			{
				return this._Pgender;
			}
			set
			{
				if ((this._Pgender != value))
				{
					this.OnPgenderChanging(value);
					this.SendPropertyChanging();
					this._Pgender = value;
					this.SendPropertyChanged("Pgender");
					this.OnPgenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pbgroupe", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string Pbgroupe
		{
			get
			{
				return this._Pbgroupe;
			}
			set
			{
				if ((this._Pbgroupe != value))
				{
					this.OnPbgroupeChanging(value);
					this.SendPropertyChanging();
					this._Pbgroupe = value;
					this.SendPropertyChanged("Pbgroupe");
					this.OnPbgroupeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Padress", DbType="VarChar(50)")]
		public string Padress
		{
			get
			{
				return this._Padress;
			}
			set
			{
				if ((this._Padress != value))
				{
					this.OnPadressChanging(value);
					this.SendPropertyChanging();
					this._Padress = value;
					this.SendPropertyChanged("Padress");
					this.OnPadressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pcity", DbType="VarChar(50)")]
		public string Pcity
		{
			get
			{
				return this._Pcity;
			}
			set
			{
				if ((this._Pcity != value))
				{
					this.OnPcityChanging(value);
					this.SendPropertyChanging();
					this._Pcity = value;
					this.SendPropertyChanged("Pcity");
					this.OnPcityChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Transfer")]
	public partial class Transfer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Tnum;
		
		private string _Pname;
		
		private string _Bgroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTnumChanging(int value);
    partial void OnTnumChanged();
    partial void OnPnameChanging(string value);
    partial void OnPnameChanged();
    partial void OnBgroupChanging(string value);
    partial void OnBgroupChanged();
    #endregion
		
		public Transfer()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tnum", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Tnum
		{
			get
			{
				return this._Tnum;
			}
			set
			{
				if ((this._Tnum != value))
				{
					this.OnTnumChanging(value);
					this.SendPropertyChanging();
					this._Tnum = value;
					this.SendPropertyChanged("Tnum");
					this.OnTnumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pname", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Pname
		{
			get
			{
				return this._Pname;
			}
			set
			{
				if ((this._Pname != value))
				{
					this.OnPnameChanging(value);
					this.SendPropertyChanging();
					this._Pname = value;
					this.SendPropertyChanged("Pname");
					this.OnPnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bgroup", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Bgroup
		{
			get
			{
				return this._Bgroup;
			}
			set
			{
				if ((this._Bgroup != value))
				{
					this.OnBgroupChanging(value);
					this.SendPropertyChanging();
					this._Bgroup = value;
					this.SendPropertyChanged("Bgroup");
					this.OnBgroupChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.newDonor")]
	public partial class newDonor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Did;
		
		private string _Dname;
		
		private System.Nullable<int> _Dage;
		
		private System.Nullable<long> _Dmobile;
		
		private string _Dgender;
		
		private string _Dbgroup;
		
		private string _Daddress;
		
		private string _Dcity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDidChanging(int value);
    partial void OnDidChanged();
    partial void OnDnameChanging(string value);
    partial void OnDnameChanged();
    partial void OnDageChanging(System.Nullable<int> value);
    partial void OnDageChanged();
    partial void OnDmobileChanging(System.Nullable<long> value);
    partial void OnDmobileChanged();
    partial void OnDgenderChanging(string value);
    partial void OnDgenderChanged();
    partial void OnDbgroupChanging(string value);
    partial void OnDbgroupChanged();
    partial void OnDaddressChanging(string value);
    partial void OnDaddressChanged();
    partial void OnDcityChanging(string value);
    partial void OnDcityChanged();
    #endregion
		
		public newDonor()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Did", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Did
		{
			get
			{
				return this._Did;
			}
			set
			{
				if ((this._Did != value))
				{
					this.OnDidChanging(value);
					this.SendPropertyChanging();
					this._Did = value;
					this.SendPropertyChanged("Did");
					this.OnDidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dname", DbType="VarChar(250)")]
		public string Dname
		{
			get
			{
				return this._Dname;
			}
			set
			{
				if ((this._Dname != value))
				{
					this.OnDnameChanging(value);
					this.SendPropertyChanging();
					this._Dname = value;
					this.SendPropertyChanged("Dname");
					this.OnDnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dage", DbType="Int")]
		public System.Nullable<int> Dage
		{
			get
			{
				return this._Dage;
			}
			set
			{
				if ((this._Dage != value))
				{
					this.OnDageChanging(value);
					this.SendPropertyChanging();
					this._Dage = value;
					this.SendPropertyChanged("Dage");
					this.OnDageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dmobile", DbType="BigInt")]
		public System.Nullable<long> Dmobile
		{
			get
			{
				return this._Dmobile;
			}
			set
			{
				if ((this._Dmobile != value))
				{
					this.OnDmobileChanging(value);
					this.SendPropertyChanging();
					this._Dmobile = value;
					this.SendPropertyChanged("Dmobile");
					this.OnDmobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dgender", DbType="VarChar(25)")]
		public string Dgender
		{
			get
			{
				return this._Dgender;
			}
			set
			{
				if ((this._Dgender != value))
				{
					this.OnDgenderChanging(value);
					this.SendPropertyChanging();
					this._Dgender = value;
					this.SendPropertyChanged("Dgender");
					this.OnDgenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dbgroup", DbType="VarChar(250)")]
		public string Dbgroup
		{
			get
			{
				return this._Dbgroup;
			}
			set
			{
				if ((this._Dbgroup != value))
				{
					this.OnDbgroupChanging(value);
					this.SendPropertyChanging();
					this._Dbgroup = value;
					this.SendPropertyChanged("Dbgroup");
					this.OnDbgroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Daddress", DbType="VarChar(550)")]
		public string Daddress
		{
			get
			{
				return this._Daddress;
			}
			set
			{
				if ((this._Daddress != value))
				{
					this.OnDaddressChanging(value);
					this.SendPropertyChanging();
					this._Daddress = value;
					this.SendPropertyChanged("Daddress");
					this.OnDaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dcity", DbType="VarChar(50)")]
		public string Dcity
		{
			get
			{
				return this._Dcity;
			}
			set
			{
				if ((this._Dcity != value))
				{
					this.OnDcityChanging(value);
					this.SendPropertyChanging();
					this._Dcity = value;
					this.SendPropertyChanged("Dcity");
					this.OnDcityChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
