<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnsae.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAASoAAABBCAYAAABmfukCAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAEnQAABJ0Ad5mH3gAAANkSURBVHhe7d2tU3JbGMZh/wSj0UgkGolEItFIJNKMRCLR
        SCQaiUYi0WgkEteZe8vmoC9+nvPiCtc1s0cBB9tvnrVcbi4KQOWECqieUAHVEyqgekIFVE+ogOr9OFSb
        zaZMp9MyHo9Lr9drrouLC5fL5TpcbRtGo1G5u7srj4+P+4J8z7dC9fz83PzC6+vr0ul0ymQyKbPZrKxW
        q+YCONa2YT6fN6G6ubkpV1dX5fb2tqzX6/1Pfe5Lodput02UEqj8wqenp/0rAN+Tgef+/r50u90mWHn8
        mU9DlVEtgcoyb7fb7Z8F+O8SrPRlsVjsnzntw1Blesr6MhMVwN+QAWg4HDartve8G6pskmc/yhQFnENW
        bVkKnnIyVNkgT6gAzum99vwRquzQ9/t9kxTwK7IMfLtn9SpU2X3PsQN7UsBvyZCUvwjmrGbrVagycmX0
        AvhNy+WyDAaD/aOjUOVsVKYpSz6gBjkc2p5kP4Qqu+050wBQg+yX53hUHEKVY+1fOSEKcA5Z3aVL2TNv
        QpXxKmMWQE3avwA2ocqJ0By2AqhJtqOyLdWE6tS5BYDf1q72mlBlw8ptWoDa5DRC/mm5CVW+cesWoEbN
        TfjabwBqJFRA9YQKqJ5QAdUTKqB6QgVUT6iA6gkVUD2hAqonVED1hAqonlAB1RMqoHpCBVRPqIDqCRVQ
        PaECqidUQPUOofKZfkCtDqE6/uhkgFpkgMog1YRqMBiU5XLZvABQi/V6Xbrd7kuoRqNRmc/nzQsAtXh4
        eCj9fv8lVJmmMlUB1GQ8HpfZbPYSqt1uVy4vL5uvALVoP3O0CVVkvMqYBVCDdn8qDqFq14IANTjeOz+E
        Kvz1D6jB8TQVr0L19kWA3/B2aHoVqphOp2UymewfAZxXlntZ9h37I1QxHA7LYrHYPwI4j9Vq1eyVvz2B
        cDJU+aFerydWwNkkUunOdrvdP/Ovk6GKxCqTVQ5cAfxNWe5lkjoVqXg3VK2cCk3l/NMy8H/LYc5snGdP
        6qMD55+GKjKS5Q4LecPNZrN/FuBnEqis1nLy/CtHor4UqlbesNPpNG+eAuaQaI40AHwkA04GnpwoaBuS
        1dpXfStUrdSwXVM2t2DIja1cLpfrnStxyhZSjj/9ZFX2o1ABnJNQAdUTKqB6QgVUT6iAypXyD+hZ35f3
        NSm+AAAAAElFTkSuQmCC
</value>
  </data>
</root>